# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
  - task: DownloadSecureFile@1 
    inputs:
      secureFile: 'parameters.json'
    displayName: 'archivo parameters.json'
  
  - script: jq --version
    displayName: 'jq instalado'


  - task: CopyFiles@2
    displayName: 'Copy Files to: $(System.DefaultWorkingDirectory)'
    inputs:
      SourceFolder: '$(Agent.TempDirectory)'
      Contents: 'parameters.json'
      TargetFolder: '$(System.DefaultWorkingDirectory)'

  - task: CmdLine@2
    displayName: 'dando nombre al archivo del enviroment de $(PROJECT_ID)'
    inputs:
      script: |
        mv $(System.DefaultWorkingDirectory)/parameters.json $(System.DefaultWorkingDirectory)/.env 

  - script: |
      ls -la
      cat .env
    displayName: 'Listar archivos'
  
  - script: 
     nombre=$(echo .env | jq -r .Nombre[0].name .env)
     profesion=$(echo .env | jq -r .Profesion.Name.primero .env)
     universidad=$(echo .env | jq -r .Profesion.universidad.universidad2 .env)
     precio=$(echo .env | jq -r .Profesion.universidad.precio.universidad3 .env)
     
     echo "$nombre es $profesion de la $universidad y gana $precio"

    displayName: 'Primera tarea'
    condition: 
  
  - script: |
      ls -la
      cat .env
    displayName: 'Listar archivos'
  
  - script: 
     nombre=$(echo .env | jq -r .Nombre[0].name .env)
     profesion=$(echo .env | jq -r .Profesion.Name.primero .env)
     universidad=$(echo .env | jq -r .Profesion.universidad.universidad2 .env)
     precio=$(echo .env | jq -r .Profesion.universidad.precio.universidad3 .env)
     
     echo "$nombre es $profesion de la $universidad y gana $precio"

    displayName: 'Primera tarea'
  
  - script: |
     nombre1=$(echo . env | jq -r '.Nombre[2].name' .env)

     estudio=$(echo . env | jq -r '.Profesion.universidad.universidad3' .env)

     precio1=$(echo . env | jq -r '.Profesion.universidad.precio.universidad1' .env)

      #precio2=$(echo . env | jq -r '.Profesion.universidad.precio.universidad2' .env)

      #precio3=$(echo . env | jq -r '.Profesion.universidad.precio.universidad3' .env)


     if [[ $nombre1 && $estudio && $precio1 ]]
     then
         echo "Melo"
     elif [[ $nombre1 && $estudio && $precio2 ]]
     then
         echo "Melo"
     elif [[ $nombre1 && $estudio && $precio3 ]]
     then
         exit 1
     fi

    displayName: "Segunda tarea"
  


